{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Setup (venv)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh setup"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Checks (ruff/black/mypy)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh check"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh test"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "GUI (local)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh gui"
			],
			"problemMatcher": []
		},
		{
			"label": "GUI (Docker)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh gui-docker"
			],
			"problemMatcher": []
		},
		{
			"label": "GUI Check (headless)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh gui-check"
			],
			"problemMatcher": []
		},
		{
			"label": "CI: tests + WV smoke",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"set -e\n./run.sh setup\n./run.sh test\nsource venv/bin/activate\npython - <<'PY'\nfrom grant_ai.scrapers.wv_grants import scrape_wv_grants\nres = scrape_wv_grants()\nprint(\"WV grants count:\", len(res))\nfor g in res[:5]:\n    print(f\"- {g.title} | {g.funder_name}\")\nPY"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "CI: run tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh test"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gcc"
			],
			"group": "test"
		},
		{
			"label": "Install and Run Grant AI",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"./run.sh setup && python scripts/setup.py"
			],
			"isBackground": false,
			"group": "build"
		}
	]
}
