[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grant-ai"
version = "0.1.0"
description = "AI-powered grant research and application management for non-profit organizations"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Grant Research Team", email = "contact@example.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Non-Profit Organizations",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "pandas>=1.5.0",
    "sqlalchemy>=1.4.0",
    "pydantic>=1.10.0",
    "click>=8.0.0",
    "python-dotenv>=0.19.0",
    "jinja2>=3.1.0",
    "openpyxl>=3.0.0",
    "scrapy>=2.7.0",
    "selenium>=4.5.0",
    "scikit-learn>=1.2.0",
    "textblob>=0.17.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "isort>=5.10.0",
    "pre-commit>=2.20.0",
]
docs = ["sphinx>=5.0.0", "sphinx-rtd-theme>=1.0.0", "myst-parser>=0.18.0"]

[project.scripts]
grant-ai = "grant_ai.core.cli:main"

[project.urls]
Homepage = "https://github.com/username/grant-ai"
Documentation = "https://grant-ai.readthedocs.io/"
Repository = "https://github.com/username/grant-ai"
"Bug Tracker" = "https://github.com/username/grant-ai/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 100
ignore = ["E501", "W291", "W293", "E203"]

[tool.black]
line-length = 100
target-version = ['py312']

[tool.flake8]
max-line-length = 100
ignore = ["E501", "W291", "W293", "E203"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["grant_ai"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
    "--cov=src/grant_ai",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/grant_ai"]
omit = ["*/tests/*", "*/test_*", "*/__init__.py", "*/conftest.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
