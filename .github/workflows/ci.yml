name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

permissions:
  contents: read

jobs:
  quality:
    name: Lint, format, types, security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools and deps
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install ruff bandit safety black isort

      - name: Black (check)
        run: black --check src/ tests/ scripts/

      - name: isort (check)
        run: isort --check-only src/ tests/ scripts/

      - name: Ruff (lint)
        run: ruff check src/ tests/ scripts/

      - name: MyPy (types)
        run: mypy src/

      - name: Bandit (security)
        run: bandit -r src/ -q || true

      - name: Safety (vulns)
        run: safety check || true

  tests:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: quality
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run unit tests
        run: pytest tests/unit/ -v --cov=src/grant_ai --cov-report=xml --cov-report=term-missing || true

      - name: Run integration tests
        run: pytest tests/integration/ -v --cov=src/grant_ai --cov-report=xml --cov-report=term-missing || true

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true
          files: coverage.xml
          flags: python-${{ matrix.python-version }}
          fail_ci_if_error: false

  gui-smoke:
    name: GUI smoke (headless)
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps (xvfb)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Install project and GUI deps
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev]'
          pip install PyQt5

      - name: Run headless GUI smoke test
        env:
          QT_QPA_PLATFORM: offscreen
        run: |
          xvfb-run -a python - <<'PY'
          import os
          os.environ['QT_QPA_PLATFORM'] = 'offscreen'
          from PyQt5.QtWidgets import QApplication
          app = QApplication([])
          import grant_ai.gui.qt_app as qt_app
          print('GUI import OK')
          app.quit()
          PY

  trivy-scan:
    name: Trivy filesystem scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner (fs)
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
